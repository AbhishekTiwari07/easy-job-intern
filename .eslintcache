[{"/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/index.js":"1","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/reportWebVitals.js":"2","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/App.js":"3","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/footer/footer.js":"4","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/about-us/about-us.js":"5","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/navbar/navbar.js":"6","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/contact-us/contact-us.js":"7","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/home/home.js":"8","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/privacy-policy/privacy-policy.js":"9","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/terms-condition/terms-condition.js":"10","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/student/login.js":"11","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/student/register.js":"12","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/employer/employerSignin.js":"13","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/employer/employerSignup.js":"14","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/utils/checkValidation.js":"15"},{"size":500,"mtime":1616128413723,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1616128413723,"results":"18","hashOfConfig":"17"},{"size":1838,"mtime":1616128413723,"results":"19","hashOfConfig":"17"},{"size":6882,"mtime":1616503022822,"results":"20","hashOfConfig":"17"},{"size":3242,"mtime":1616128413723,"results":"21","hashOfConfig":"17"},{"size":5967,"mtime":1616128413723,"results":"22","hashOfConfig":"17"},{"size":6682,"mtime":1616128413723,"results":"23","hashOfConfig":"17"},{"size":9716,"mtime":1616128651231,"results":"24","hashOfConfig":"17"},{"size":1754,"mtime":1616128413723,"results":"25","hashOfConfig":"17"},{"size":2196,"mtime":1616128413723,"results":"26","hashOfConfig":"17"},{"size":6230,"mtime":1616501294046,"results":"27","hashOfConfig":"17"},{"size":15189,"mtime":1616501294046,"results":"28","hashOfConfig":"17"},{"size":4021,"mtime":1616501294046,"results":"29","hashOfConfig":"17"},{"size":7156,"mtime":1616501294046,"results":"30","hashOfConfig":"17"},{"size":1797,"mtime":1616128413723,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1jth6uk",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/index.js",[],["70","71"],"/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/reportWebVitals.js",[],"/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/App.js",[],"/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/footer/footer.js",["72","73","74","75"],"/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/about-us/about-us.js",[],"/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/navbar/navbar.js",["76","77","78"],"import React,{useState,useEffect} from \"react\";\nimport { Button, Navbar, Nav, Form, FormControl, Dropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Icon from 'react-bootstrap-icons';\nimport { Link,useHistory } from \"react-router-dom\";\n\n\nfunction NavBar(){\n\n\n    useEffect(()=>{\n       const user = isAuth();\n    },[])\n\n    const isAuth =() =>{\n        if(process.browser){\n            const checktoken = localStorage.getItem('jwt');\n            if(checktoken){\n                if(localStorage.getItem('user')){ \n                    const user = localStorage.getItem('user')\n                    return JSON.parse(user)\n                }else{\n                    return false\n                }\n            }\n        } \n    }\n\n    return(\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                <Navbar.Brand as={Link} to=\"/\" style={{color: \"yellow\"}}>Easy Job Intern</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\" >\n                                    Internship\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    <Dropdown.Item as={Link} to=\"/\" > Internship By Industry</Dropdown.Item>\n                                    <Dropdown.Item as={Link} to=\"/\" > Internship By Location</Dropdown.Item>\n                                    <Dropdown.Item as={Link} to=\"/\" > Internship By Stream</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav.Link>\n                        <Nav.Link>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                                    Jobs\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    <Dropdown.Item as={Link} to=\"/\" >Jobs By Industry</Dropdown.Item>\n                                    <Dropdown.Item as={Link} to=\"/\" >Jobs By Location</Dropdown.Item>\n                                    <Dropdown.Item as={Link} to=\"/\" >Jobs By Stream</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav.Link>\n                        <Nav.Link>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                                    Freshers Jobs\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    <Dropdown.Item as={Link} to=\"/\" >Freshers Jobs By Industry</Dropdown.Item>\n                                    <Dropdown.Item as={Link} to=\"/\" >Freshers Jobs By Location</Dropdown.Item>\n                                    <Dropdown.Item as={Link} to=\"/\" >Freshers Jobs By Stream</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav.Link>\n                        <Nav.Link as={Link} to=\"/\" className=\"my-auto px-3\" style={{color:\"white\"}} >Blogs</Nav.Link>\n                    </Nav>\n                    <Form inline>\n                         <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-1\"/>\n                         <Button><Icon.Search/></Button>\n                    </Form>\n                    <Nav>\n                        {isAuth() ?\n                            <React.Fragment> \n                                <Nav.Link>\n                            Welcome-{isAuth().name}\n                        </Nav.Link>\n                            <Nav.Link\n                            onClick={()=>{localStorage.removeItem('jwt'); localStorage.removeItem('user'); window.location.reload(false);}}\n                            >\n                            signout\n                        </Nav.Link>\n                        \n                        </React.Fragment>\n                        :\n                        <React.Fragment>\n                        <Nav.Link>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                                    <Icon.BoxArrowInRight /> Login\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    <Dropdown.Item as={Link} to=\"/student-login\" >Student</Dropdown.Item>\n                                    <Dropdown.Item as={Link} to=\"/employer-login\" >Employer</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav.Link>\n                        <Nav.Link>\n                            <Dropdown>\n                                    <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                                        <Icon.PersonPlus /> Signup\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item as={Link} to=\"/student-signup\" >Student</Dropdown.Item>\n                                        <Dropdown.Item as={Link} to=\"/employer-signup\" >Employer</Dropdown.Item>\n                                    </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav.Link>\n                        </React.Fragment>\n                        \n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n          \n        </>\n    )\n}\n\nexport default NavBar;\n","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/contact-us/contact-us.js",["79","80","81","82","83"],"import React, { useState} from 'react'\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport './contact-us.css'\n\nconst ContactUs = () => {\n \n  \n  const [firstName,setfirstName] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n  const [mobile,setMobile] = useState();\n  const [lastName, setlastName] = useState(\"\");\n  const [messages, setmessages] = useState(\"\");\n\n\n  const [firstNameErr,setfirstNameErr] = useState({});\n  const [lastNameErr,setlastNameErr] = useState({});\n  const [emailErr,setemailErr] = useState({});\n  const [mobileErr,setmobileErr] = useState({});\n  const [messageErr,setmessagesErr] = useState({});\n\n  \n  const API_KEY = process.env.FORMSPREE_API_KEY\n\n  const [serverState, setServerState] = useState({\n    submitting: false,\n    status: null\n  })\n\n\n  const handleServerResponse = (ok, msg, form) => {\n    setServerState({\n      submitting: false,\n      status: { ok, msg }\n    });\n    if (ok) {\n      form.reset();\n    }\n  }\n  \n  const submitContactUs = (e) => {\n\n    e.preventDefault();\n\n    const isValid = formValidations() ;\n\n    console.log(firstName);\n    if (isValid) {\n    const form = e.target;\n    setServerState({ submitting: true });\n    const url = `https://formspree.io/f/${API_KEY}`\n    fetch(url, {\n      method: 'POST',\n      mode: 'no-cors',\n      body: JSON.stringify({\n        firstName: firstName ,\n        lastName: lastName,\n        email: email,\n        mobile: mobile,  \n        messages: messages\n      }),\n    })\n    .then(r => {\n      handleServerResponse(true, \"Thanks for contacting us.\", form);\n    })\n    .catch(r => {\n      handleServerResponse(false, \"Not able to submit!\", form);\n    });\n    setfirstName(\"\");\n    setlastName(\"\");\n    setEmail(\"\");\n    setMobile(\"\");\n    setmessages(\"\");\n    }\n  }\n      \n  const formValidations = () => {\n\n    const firstNameErr = {} ;\n    const lastNameErr = {} ;\n    const emailErr = {} ;\n    const mobileErr = {} ;\n    const messageErr = {} ;\n\n    let isValid = true; \n\n\n    if(!firstName){\n      firstNameErr.firstNameEmpty = \"*This field is empty*\";\n      isValid = false ;\n    }else if(firstName.trim().length < 3){\n      firstNameErr.firstNameShort = \"*first name is too short*\";\n      isValid = false ;\n    }else if(firstName.trim().length >= 10){\n      firstNameErr.firstNameLong = \"*first name is too long*\";\n      isValid = false ;\n    }\n\n    if(!lastName){\n      lastNameErr.lastNameEmpty = \"*This field is empty*\";\n      isValid = false ;\n    }else if(lastName.trim().length < 3){\n      lastNameErr.lastNameShort = \"*last name is too short*\";\n      isValid = false ;\n    }else if(lastName.trim().length >= 10){\n      lastNameErr.lastNameLong = \"*last name is too long*\";\n      isValid = false ;\n    }\n\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!email) {\n      emailErr.emailRequired = \"*Email is required*\";\n      isValid = false;\n    }else if (!emailRegex.test(email)) {\n      emailErr.emailValid =\"*Please Enter Valid Email*\";\n      isValid = false;\n    }\n\n    const pattern = /^\\d+$/;\n\n    if (!mobile){\n        mobileErr.mobileEmpty= '*This field is empty*';\n      isValid = false;\n    }else if (!pattern.test(mobile)){\n        mobileErr.mobileRequired = \"Required field should be a number\";\n        isValid = false;\n    }else if (mobile.trim().length < 10 ){\n      mobileErr.mobileLenght = \"Required field should be a valid number\";\n        isValid = false;\n    }\n\n    if(!messages){\n        messageErr.messageEmpty= \"*This field is empty*\";\n        isValid = false ;\n      }else if(messages.trim().length < 3){\n        messageErr.messageShort = \"*message is too short*\";\n        isValid = false ;\n      }\n\n\n\n    setfirstNameErr(firstNameErr);\n    setlastNameErr(lastNameErr);\n    setemailErr(emailErr);\n    setmobileErr(mobileErr);\n    setmessagesErr(messageErr);\n\n    return isValid ;\n  }\n\n  return (\n    <div className=\"background\" >\n      <div className=\"form\">\n        <h3>Contact Us</h3>\n        <Form className=\"contactUs\" onSubmit={submitContactUs}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\" id=\"firstName\" name=\"firstName\"\n              placeholder=\"First Name\"\n              value={firstName}\n              className=\"form-control\"\n              onChange={ (e) =>{setfirstName(e.target.value)} }/>\n\n          {Object.keys(firstNameErr).map((key)=>{\n       return <div key={key} style={{color : \"red\"}}>{firstNameErr[key]}</div>\n })}\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"text\" id=\"lastName\" name=\"lastName\"\n              placeholder=\"Last Name\"\n              value={lastName}\n              className=\"form-control\"\n              onChange={ (e) => {setlastName(e.target.value) } }/>\n\n          {Object.keys(lastNameErr).map((key)=>{\n       return <div key={key} style={{color : \"red\"}}>{lastNameErr[key]}</div>\n })}\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"text\" id=\"email\" name=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              className=\"form-control\"\n              onChange={ (e) => {setEmail(e.target.value)} }/>\n              \n         {Object.keys(emailErr).map((key)=>{\n       return <div key={key} style={{color : \"red\"}}>{emailErr[key]}</div>\n })}\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"number\" id=\"mobile\" name=\"mobile\"\n              placeholder=\"Enter mobile no.\"\n              value={mobile}\n              className=\"form-control\"\n              onChange={ (e) => {setMobile(e.target.value)} } />\n\n           {Object.keys(mobileErr).map((key)=>{\n       return <div key={key} style={{color : \"red\"}}>{mobileErr[key]}</div>\n })}\n          </Form.Group>\n          <Form.Group>\n            <Form.Control\n              type=\"textarea\" id=\"messages\" name=\"messages\"\n              placeholder=\"Enter message\"\n              rows=\"12\"\n              value={messages}\n              className=\"form-control\"\n              onChange={ (e) => {setmessages(e.target.value)} }/>\n\n           {Object.keys(messageErr).map((key)=>{\n       return <div key={key} style={{color : \"red\"}}>{messageErr[key]}</div>\n })}\n          </Form.Group>\n          <Button variant=\"warning\" type=\"submit\">\n            Submit\n          </Button>\n          {serverState.status && (\n            <p className={!serverState.status.ok ? \"errorMsg\" : \"\"}>\n              {serverState.status.msg}\n            </p>\n          )}\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ContactUs;\n","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/home/home.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Container, Row, Col, Button, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./home.css\";\n\nconst Home = () => {\n  return (\n    <>\n      <div class=\"home\">\n\n        <div\n          style={{ backgroundColor: \"\" }}\n          \n          class=\"col d-flex justify-content-center\"\n        >\n          <Card\n            style={{\n              width: \"75vh\",\n              marginTop: \"6%\",\n              opacity: \"0.8\",\n              background: \"black\",\n              color: \"white\",\n            }}\n          >\n            <Card.Body>\n              <Card.Text>\n                <h2>Easy Job Intern</h2>\n                FIND BEST WINTER & SUMMER INTERNSHIPS FOR STUDENTS IN INDIA<br></br>\n                Apply to 10,000+ internships for free!\n              </Card.Text>\n              <Button style={{color: '#000000',backgroundColor: '#ffc107',borderColor: 'white'}} variant=\"info\" as={Link} to=\"/student-signup\" >\n                Get Started \n              </Button>\n            </Card.Body>\n          </Card>\n        </div>\n        <div style={{ background: \"\", padding: \"30px 0 80px 0\" }}>\n        \n          <Container>\n          \n            <Row>\n              <Col class=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\n                <img src=\"images/industry.png\" alt=\"\"></img>\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\n                  Internship By Industry\n                </h4>\n                <ListGroup>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item variant=\"primary\">IT</ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item action variant=\"secondary\">\n                      Marketing\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"success\">\n                      Design\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"danger\">\n                      MBA\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"warning\">\n                      Engineering\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"info\">\n                      Media\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item action variant=\"success\">\n                      Teaching\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"dark\">\n                      Finance\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                </ListGroup>\n              </Col>\n              <Col class=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\n                <img src=\"images/location.png\" alt=\"\"></img>\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\n                  {\" \"}\n                  Internship By Location\n                </h4>\n                <ListGroup>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item variant=\"primary\">Mumbai</ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item action variant=\"secondary\">\n                      Pune\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"success\">\n                      Bangalore\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"danger\">\n                      Chennai\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"warning\">\n                      Kolkata\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"info\">\n                      Gugaon\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item action variant=\"success\">\n                      Delhi\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"dark\">\n                      India\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                </ListGroup>\n              </Col>\n              <Col class=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\n                <img src=\"images/stream.png\" alt=\"\"></img>\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\n                  Internship By Stream\n                </h4>\n                <ListGroup>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item variant=\"primary\">\n                      Management\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item action variant=\"secondary\">\n                      Manufacturing\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"success\">\n                      Accounts\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"danger\">\n                      Architecture\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"warning\">\n                      Machine Learning\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"info\">\n                      Data Science\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item action variant=\"success\">\n                      Development\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"dark\">\n                      Design\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                </ListGroup>\n              </Col>\n              <Col class=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\n                <img src=\"images/ot2.png\" alt=\"\"></img>\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\n                  Online Trainings by Us\n                </h4>\n                <ListGroup>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item variant=\"primary\">\n                      Programming With Python\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item action variant=\"secondary\">\n                      Digital Marketing\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"success\">\n                      Web Development\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"danger\">\n                      Machine Learning\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"warning\">\n                      Advanced Excel\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"info\">\n                      Ethical Hacking\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    <ListGroup.Item action variant=\"success\">\n                      AutoCAD\n                    </ListGroup.Item>\n                  </a>\n                  <a class=\"itemLink\" href=\"#\">\n                    {\" \"}\n                    <ListGroup.Item action variant=\"dark\">\n                      Creative Writing\n                    </ListGroup.Item>{\" \"}\n                  </a>\n                </ListGroup>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/privacy-policy/privacy-policy.js",[],"/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/terms-condition/terms-condition.js",[],"/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/student/login.js",["116","117"],"import React, { useState } from \"react\";\nimport { Button, Card, Form, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport checkValidity from \"../../utils/checkValidation\";\nimport axios from \"axios\";\nimport \"./register.css\";\n\nfunction LoginForm() {\n  //creating a dicitionary for every field of the form\n  const initialState = {\n    email: {\n      //value of the input field\n      value: \"\",\n      //rules to check while validating the input\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      //error messages to show in case any validation rule is not followed\n      errorMessage: \"\",\n      // boolean value to check if the whole input field is valid or not\n      valid: false,\n      //boolean value to check if the input field is touched or not\n      touched: false,\n    },\n\n    password: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 8,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n  };\n  const [formValues, setFormValues] = useState(initialState);\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation,\n      updatedFormValues.password.value\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  const submitSignin = (e) => {\n    e.preventDefault();\n    const { email, password } = formValues;\n    axios\n      .post(\"http://localhost:5000/student/signin\", {\n        email: email.value,\n        password: password.value,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          console.log(res.data.error);\n          alert(res.data.error);\n        } else {\n          localStorage.setItem(\"jwt\", res.data.token);\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n          console.log(\n            \"Token: \",\n            res.data.token,\n            \"User Details: \",\n            res.data.user\n          );\n          alert(\"Signin Successfull\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n    setFormValues(initialState);\n  };\n\n  return (\n    <>\n      <div style={{ padding: \"4vh 0\" }}>\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\n          }}\n          className='register_card_custom'\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#ffc107\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Student Signin\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitSignin(e)}>\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Email address\n                </Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  className={`${\n                    !formValues.email.valid && formValues.email.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  value={formValues.email.value}\n                  onChange={handleChange}\n                />\n                {formValues.email.errorMessage && (\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\n                )}\n              </Form.Group>\n\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicPassword\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\n                <Form.Control\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                  type=\"password\"\n                  className={`${\n                    !formValues.password.valid && formValues.password.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={formValues.password.value}\n                  onChange={handleChange}\n                />\n                {formValues.password.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.password.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n              <Form.Group\n                style={{\n                  textAlign: \"left\",\n                  fontSize: \"1.5vh\",\n                  marginTop: \"10px\",\n                }}\n              >\n                <Link to=\"/student-signup\">\n                  <a style={{ fontWeight: \"bold\" }}>\n                    Don't have an account? Sign up\n                  </a>\n                </Link>\n              </Form.Group>\n\n              <Button\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\n                variant=\"secondary\"\n                type=\"submit\"\n                disabled={!formIsValid}\n              >\n                Signin\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n}\nexport default LoginForm;\n","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/student/register.js",["118"],"import React, { useState } from \"react\";\nimport { Button, Form, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport checkValidity from \"../../utils/checkValidation\";\nimport \"./register.css\";\n\nconst StudentSignup = () => {\n  //creating a dicitionary for every field of the form\n  const initialState = {\n    personName: {\n      //value of the input field\n      value: \"\",\n      //rules to check while validating the input\n      validation: {\n        required: true,\n        minLength: 5,\n      },\n      //error messages to show in case any validation rule is not followed\n      errorMessage: \"\",\n      // boolean value to check if the whole input field is valid or not\n      valid: false,\n      //boolean value to check if the input field is touched or not\n      touched: false,\n    },\n    email: {\n      value: \"\",\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    password: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 8,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    passwordConfirmation: {\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 8,\n        checkPassword: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    contact: {\n      value: \"\",\n      validation: {\n        required: true,\n        Length: 10,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    degree: {\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    institutionName: {\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    branch: {\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n    year: {\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      errorMessage: \"\",\n      valid: false,\n      touched: false,\n    },\n  };\n\n  const [formValues, setFormValues] = useState(initialState);\n  const [signupError, setSignupError] = useState(null);\n\n  const [formIsValid, setFormIsValid] = useState(false); //boolean to check that the whole form is valid or not\n\n  const handleChange = (e) => {\n    const updatedFormValues = { ...formValues };\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\n    updatedFormElement.value = e.target.value;\n    let validOutput = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation,\n      updatedFormValues.password.value\n    );\n    updatedFormElement.valid = validOutput[0];\n    updatedFormElement.errorMessage = validOutput[1];\n    updatedFormElement.touched = true;\n    updatedFormValues[e.target.name] = updatedFormElement;\n\n    let formValid = true;\n    for (let inputIdentifiers in updatedFormValues) {\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\n    }\n    setFormValues(updatedFormValues);\n    setFormIsValid(formValid);\n  };\n\n  const passwordIsValidChecker = () => {\n    const { password, passwordConfirmation } = formValues;\n    return password.value === passwordConfirmation.value;\n  };\n\n  const submitSignup = (e) => {\n    const {\n      personName,\n      email,\n      password,\n      passwordConfirmation,\n      contact,\n      branch,\n      year,\n      degree,\n      institutionName,\n    } = formValues;\n\n    e.preventDefault();\n    if (!passwordIsValidChecker()) {\n      setSignupError(\"Passwords do not match\");\n      return;\n    } else {\n      axios\n        .post(\"http://localhost:5000/student/signup\", {\n          personName: personName.value,\n          email: email.value,\n          password: password.value,\n          contact: contact.value,\n          passwordConfirmation: passwordConfirmation.value,\n          branch: branch.value,\n          year: year.value,\n          degree: degree.value,\n          institutionName: institutionName.value,\n        })\n        .then((res) => {\n          console.log(res.data.user);\n          alert(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    setFormValues(initialState);\n  };\n\n  return (\n    <>\n      <div style={{ padding: \"4vh 0\" }}>\n        <Card\n          style={{\n            width: \"40vw\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginTop: \"4vh\",\n            marginBottom: \"4vh\",\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\n          }}\n          className=\"register_card_custom\"\n        >\n          <Card.Header\n            style={{\n              backgroundColor: \"#6c6c6c\",\n              color: \"#6EE2CD\",\n              fontFamily: '\"Merriweather\", serif',\n              fontSize: \"1.25rem\",\n            }}\n            as=\"h5\"\n          >\n            Student Signup\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={(e) => submitSignup(e)}>\n              {/* Name of the student */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.personName.valid &&\n                    formValues.personName.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  name=\"personName\"\n                  value={formValues.personName.value}\n                  onChange={handleChange}\n                />\n                {formValues.personName.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.personName.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Email address */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Email address\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.email.valid && formValues.email.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  value={formValues.email.value}\n                  onChange={handleChange}\n                />\n                {formValues.email.errorMessage && (\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\n                )}\n              </Form.Group>\n\n              {/*  Password */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicPassword\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.password.valid && formValues.password.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={formValues.password.value}\n                  onChange={handleChange}\n                />\n                {formValues.password.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.password.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Confirm Password */}\n              <Form.Group\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\n                controlId=\"formBasicPassword\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Confirm Password\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.passwordConfirmation.valid &&\n                    formValues.passwordConfirmation.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"password\"\n                  placeholder=\"Re-enter Password\"\n                  name=\"passwordConfirmation\"\n                  value={formValues.passwordConfirmation.value}\n                  onChange={handleChange}\n                />\n                {formValues.passwordConfirmation.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.passwordConfirmation.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Contact Number */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.contact.valid && formValues.contact.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"number\"\n                  placeholder=\"Enter your contact number\"\n                  name=\"contact\"\n                  value={formValues.contact.value}\n                  onChange={handleChange}\n                />\n                {formValues.contact.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.contact.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Degree */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Which degree you are pursuing?\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.degree.valid && formValues.degree.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter complete name of your degree\"\n                  name=\"degree\"\n                  value={formValues.degree.value}\n                  onChange={handleChange}\n                />\n                {formValues.degree.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.degree.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* College Name */}\n              <Form.Group\n                style={{ textAlign: \"left\" }}\n                controlId=\"formBasicName\"\n              >\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  College Name\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.institutionName.valid &&\n                    formValues.institutionName.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Your college name\"\n                  name=\"institutionName\"\n                  value={formValues.institutionName.value}\n                  onChange={handleChange}\n                />\n                {formValues.institutionName.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.institutionName.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Branch of study */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Field of study\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.branch.valid && formValues.branch.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your field of study\"\n                  name=\"branch\"\n                  value={formValues.branch.value}\n                  onChange={handleChange}\n                />\n                {formValues.branch.errorMessage && (\n                  <span className=\"error\">\n                    {formValues.branch.errorMessage}\n                  </span>\n                )}\n              </Form.Group>\n\n              {/* Year of study */}\n              <Form.Group style={{ textAlign: \"left\" }}>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Which year of college you are in?\n                </Form.Label>\n                <Form.Control\n                  className={`${\n                    !formValues.year.valid && formValues.year.touched\n                      ? \"input-error\"\n                      : \"\"\n                  }`}\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                  type=\"text\"\n                  placeholder=\"Enter your college year\"\n                  name=\"year\"\n                  value={formValues.year.value}\n                  onChange={handleChange}\n                />\n                {formValues.year.errorMessage && (\n                  <span className=\"error\">{formValues.year.errorMessage}</span>\n                )}\n              </Form.Group>\n\n              {/* Already a user? */}\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\n                <Link to=\"/student-login\">\n                  <a style={{ fontWeight: \"bold\" }}>\n                    Already have an account? Sign in\n                  </a>\n                </Link>\n              </Form.Group>\n\n              {signupError ? (\n                <Form.Text\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\n                  className=\"text-danger\"\n                >\n                  {signupError}\n                </Form.Text>\n              ) : null}\n              <Button\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\n                variant=\"secondary\"\n                type=\"submit\"\n                disabled={!formIsValid}\n              >\n                Register\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </>\n  );\n};\nexport default StudentSignup;\n","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/employer/employerSignin.js",["119"],"import React, { Component } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './employer.css'\n\nclass EmployerSignin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n    };\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n      default:\n        break;\n    }\n  };\n\n  submitSignin = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"http://localhost:5000/employer/signin\", {\n        email: this.state.email,\n        password: this.state.password,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.error) {\n          alert(res.data.error);\n        } else {\n          console.log(\n            \"Token: \",\n            res.data.token,\n            \"User Details: \",\n            res.data.user\n          );\n          alert(\"Signin Successfull\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <div style={{ padding: \"4vh 0\" }}>\n          <Card\n            style={{\n              width: \"40vw\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              marginTop: \"4vh\",\n              marginBottom: \"4vh\",\n              backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\n            }}\n            className='employer_form_card_custom'\n          >\n            <Card.Header\n              style={{\n                backgroundColor: \"#6c6c6c\",\n                color: \"#ffc107\",\n                fontFamily: '\"Merriweather\", serif',\n                fontSize: \"1.25rem\",\n              }}\n              as=\"h5\"\n            >\n              Employer Signin\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={(e) => this.submitSignin(e)}>\n                <Form.Group\n                  style={{ textAlign: \"left\" }}\n                  controlId=\"formBasicEmail\"\n                  onChange={(e) => this.userTyping(\"email\", e)}\n                >\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Email address\n                  </Form.Label>\n                  <Form.Control\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                  />\n                </Form.Group>\n\n                <Form.Group\n                  style={{ textAlign: \"left\" }}\n                  controlId=\"formBasicPassword\"\n                  onChange={(e) => this.userTyping(\"password\", e)}\n                >\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Password\n                  </Form.Label>\n                  <Form.Control\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n\n                  <Form.Group\n                    style={{\n                      textAlign: \"left\",\n                      fontSize: \"1.5vh\",\n                      marginTop: \"10px\",\n                    }}\n                  >\n                    <Link to=\"/employer-signup\">\n                      <a style={{ fontWeight: \"bold\" }}>\n                        Don't have an account? Sign up\n                      </a>\n                    </Link>\n                  </Form.Group>\n                </Form.Group>\n                <Button\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\n                  variant=\"secondary\"\n                  type=\"submit\"\n                >\n                  Signin\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </>\n    );\n  }\n}\nexport default EmployerSignin;\n","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/components/employer/employerSignup.js",["120"],"import React, { Component } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './employer.css'\n\nclass EmployerSignup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      companyName: null,\n      personName: null,\n      email: null,\n      contact: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: null,\n    };\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        console.log(\"email\");\n        this.setState({ email: e.target.value });\n        break;\n\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n\n      case \"passwordConfirmation\":\n        this.setState({ passwordConfirmation: e.target.value });\n        break;\n      case \"companyName\":\n        this.setState({ companyName: e.target.value });\n        break;\n      case \"personName\":\n        this.setState({ personName: e.target.value });\n        break;\n      case \"contact\":\n        this.setState({ contact: e.target.value });\n        break;\n      default:\n        break;\n    }\n  };\n\n  formIsValid = () => {\n    return this.state.password === this.state.passwordConfirmation;\n  };\n\n  submitSignup = (e) => {\n    e.preventDefault();\n    if (!this.formIsValid()) {\n      this.setState({ signupError: \"Passwords do not match\" });\n      return;\n    } else {\n      axios\n        .post(\"http://localhost:5000/employer/signup\", {\n          personName: this.state.personName,\n          email: this.state.email,\n          password: this.state.password,\n          contact: this.state.contact,\n          passwordConfirmation: this.state.passwordConfirmation,\n          companyName: this.state.companyName,\n        })\n        .then((res) => {\n          console.log(res.data.user);\n          alert(res.data.message);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div style={{ padding: \"4vh 0\" }}>\n          <Card\n            style={{\n              width: \"40vw\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              marginTop: \"4vh\",\n              marginBottom: \"4vh\",\n              backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\n            }}\n            className=\"employer_form_card_custom\"\n          >\n            <Card.Header\n              style={{\n                backgroundColor: \"#6c6c6c\",\n                color: \"#6EE2CD\",\n                fontFamily: '\"Merriweather\", serif',\n                fontSize: \"1.25rem\",\n              }}\n              as=\"h5\"\n            >\n              Employer Signup\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={(e) => this.submitSignup(e)}>\n                <Form.Group\n                  style={{ textAlign: \"left\" }}\n                  controlId=\"formBasicName\"\n                  onChange={(e) => this.userTyping(\"companyName\", e)}\n                >\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Company Name\n                  </Form.Label>\n                  <Form.Control\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"text\"\n                    placeholder=\"Enter the company name\"\n                  />\n                </Form.Group>\n\n                <Form.Group\n                  style={{ textAlign: \"left\" }}\n                  controlId=\"formBasicEmail\"\n                  onChange={(e) => this.userTyping(\"email\", e)}\n                >\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Email address\n                  </Form.Label>\n                  <Form.Control\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                  />\n                </Form.Group>\n\n                <Form.Group\n                  style={{ textAlign: \"left\" }}\n                  controlId=\"formBasicPassword\"\n                  onChange={(e) => this.userTyping(\"password\", e)}\n                >\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Password\n                  </Form.Label>\n                  <Form.Control\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n                <Form.Group\n                  style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\n                  controlId=\"formBasicPassword\"\n                  onChange={(e) => this.userTyping(\"passwordConfirmation\", e)}\n                >\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Confirm Password\n                  </Form.Label>\n                  <Form.Control\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"password\"\n                    placeholder=\"Re-enter Password\"\n                  />\n                </Form.Group>\n\n                <Form.Group\n                  style={{ textAlign: \"left\" }}\n                  onChange={(e) => this.userTyping(\"personName\", e)}\n                >\n                  <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\n                  <Form.Control\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"text\"\n                    placeholder=\"Enter your name\"\n                  />\n                </Form.Group>\n\n                <Form.Group\n                  style={{ textAlign: \"left\" }}\n                  onChange={(e) => this.userTyping(\"contact\", e)}\n                >\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Contact\n                  </Form.Label>\n                  <Form.Control\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\n                    type=\"number\"\n                    placeholder=\"Enter your contact number\"\n                  />\n                </Form.Group>\n\n                <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\n                  <Link to=\"/employer-login\">\n                    <a style={{ fontWeight: \"bold\" }}>\n                      Already have an account? Sign in\n                    </a>\n                  </Link>\n                </Form.Group>\n\n                {this.state.signupError ? (\n                  <Form.Text\n                    style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\n                    className=\"text-danger\"\n                  >\n                    {this.state.signupError}\n                  </Form.Text>\n                ) : null}\n                <Button\n                  style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\n                  variant=\"secondary\"\n                  type=\"submit\"\n                >\n                  Register\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </>\n    );\n  }\n}\nexport default EmployerSignup;\n","/home/pankajkumarbij/projects/Open Source Admin/easy-job-intern/src/utils/checkValidation.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":94,"column":15,"nodeType":"127","endLine":94,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":100,"column":15,"nodeType":"127","endLine":100,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":106,"column":15,"nodeType":"127","endLine":106,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":112,"column":15,"nodeType":"127","endLine":112,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":1,"column":15,"nodeType":"130","messageId":"131","endLine":1,"endColumn":23},{"ruleId":"128","severity":1,"message":"132","line":5,"column":15,"nodeType":"130","messageId":"131","endLine":5,"endColumn":25},{"ruleId":"128","severity":1,"message":"133","line":12,"column":14,"nodeType":"130","messageId":"131","endLine":12,"endColumn":18},{"ruleId":"128","severity":1,"message":"134","line":2,"column":24,"nodeType":"130","messageId":"131","endLine":2,"endColumn":29},{"ruleId":"135","severity":1,"message":"136","line":109,"column":46,"nodeType":"137","messageId":"138","endLine":109,"endColumn":47,"suggestions":"139"},{"ruleId":"135","severity":1,"message":"136","line":109,"column":71,"nodeType":"137","messageId":"138","endLine":109,"endColumn":72,"suggestions":"140"},{"ruleId":"135","severity":1,"message":"136","line":109,"column":80,"nodeType":"137","messageId":"138","endLine":109,"endColumn":81,"suggestions":"141"},{"ruleId":"135","severity":1,"message":"136","line":109,"column":84,"nodeType":"137","messageId":"138","endLine":109,"endColumn":85,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"126","line":49,"column":19,"nodeType":"127","endLine":49,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":52,"column":19,"nodeType":"127","endLine":52,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":57,"column":19,"nodeType":"127","endLine":57,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":63,"column":19,"nodeType":"127","endLine":63,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":69,"column":19,"nodeType":"127","endLine":69,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":75,"column":19,"nodeType":"127","endLine":75,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":81,"column":19,"nodeType":"127","endLine":81,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":86,"column":19,"nodeType":"127","endLine":86,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":101,"column":19,"nodeType":"127","endLine":101,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":104,"column":19,"nodeType":"127","endLine":104,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":109,"column":19,"nodeType":"127","endLine":109,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":115,"column":19,"nodeType":"127","endLine":115,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":121,"column":19,"nodeType":"127","endLine":121,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":127,"column":19,"nodeType":"127","endLine":127,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":133,"column":19,"nodeType":"127","endLine":133,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":138,"column":19,"nodeType":"127","endLine":138,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":152,"column":19,"nodeType":"127","endLine":152,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":157,"column":19,"nodeType":"127","endLine":157,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":162,"column":19,"nodeType":"127","endLine":162,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":168,"column":19,"nodeType":"127","endLine":168,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":174,"column":19,"nodeType":"127","endLine":174,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":180,"column":19,"nodeType":"127","endLine":180,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":186,"column":19,"nodeType":"127","endLine":186,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":191,"column":19,"nodeType":"127","endLine":191,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":205,"column":19,"nodeType":"127","endLine":205,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":210,"column":19,"nodeType":"127","endLine":210,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":215,"column":19,"nodeType":"127","endLine":215,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":221,"column":19,"nodeType":"127","endLine":221,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":227,"column":19,"nodeType":"127","endLine":227,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":233,"column":19,"nodeType":"127","endLine":233,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":239,"column":19,"nodeType":"127","endLine":239,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":244,"column":19,"nodeType":"127","endLine":244,"endColumn":48},{"ruleId":"128","severity":1,"message":"134","line":2,"column":30,"nodeType":"130","messageId":"131","endLine":2,"endColumn":35},{"ruleId":"125","severity":1,"message":"143","line":179,"column":19,"nodeType":"127","endLine":179,"endColumn":53},{"ruleId":"125","severity":1,"message":"143","line":438,"column":19,"nodeType":"127","endLine":438,"endColumn":53},{"ruleId":"125","severity":1,"message":"143","line":121,"column":23,"nodeType":"127","endLine":121,"endColumn":57},{"ruleId":"125","severity":1,"message":"143","line":193,"column":21,"nodeType":"127","endLine":193,"endColumn":55},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'user' is assigned a value but never used.","'Alert' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["146","147"],["148","149"],["150","151"],["152","153"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"messageId":"154","fix":"155","desc":"156"},{"messageId":"157","fix":"158","desc":"159"},{"messageId":"154","fix":"160","desc":"156"},{"messageId":"157","fix":"161","desc":"159"},{"messageId":"154","fix":"162","desc":"156"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"154","fix":"164","desc":"156"},{"messageId":"157","fix":"165","desc":"159"},"removeEscape",{"range":"166","text":"167"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"168","text":"169"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"170","text":"167"},{"range":"171","text":"169"},{"range":"172","text":"167"},{"range":"173","text":"169"},{"range":"174","text":"167"},{"range":"175","text":"169"},[2769,2770],"",[2769,2769],"\\",[2794,2795],[2794,2794],[2803,2804],[2803,2803],[2807,2808],[2807,2807]]